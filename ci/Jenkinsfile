#!groovy
pipeline {
    agent {
        label 'linux'
    }

    environment {
        SERVICE_NAME = 'cennznet-js'
        IMAGE_NAME = "centrality/${SERVICE_NAME}-build:1.0.${BUILD_NUMBER}"
        GIT_NAME = 'Jenkins'
        GIT_EMAIL = 'jenkins@centrality.ai'
        PUBLISH_IMAGE_NAME = "centrality/${SERVICE_NAME}:1.0.${BUILD_NUMBER}"
        LAST_COMMIT_AUTHOR = sh(script: "git log -1 --pretty=format:'%an'", returnStdout: true).trim()
        AWS_ACCESS_KEY = credentials('TF_AWS_ACCESS_KEY')
        AWS_SECRET_KEY = credentials('TF_AWS_SECRET_KEY')
        PACKAGE_NAMES = 'wallet api'
    }

    stages {
        stage('Build') {
            environment {
                SSH_RSA_FILE_PATH = credentials('jenkins-ssh-key')
            }
            when {
                expression { env.GIT_NAME != env.LAST_COMMIT_AUTHOR }
            }
            steps {
                sh './ci/deployment/build.sh'
            }
        }

        stage('Unit Test') {
            when {
                expression { env.GIT_NAME != env.LAST_COMMIT_AUTHOR }
            }
            steps {
                sh './ci/pr/unit-test.sh'
            }
        }

        stage('Yarn Audit') {
          when {
            expression { env.GIT_NAME != env.LAST_COMMIT_AUTHOR }
          }
          steps {
            script {
              AUDIT_RES = sh (
                script: './ci/pr/yarn-audit.sh',
                returnStatus: true
              ) == 0
              if (!AUDIT_RES) {
                timeout(time: 30, unit: 'MINUTES') {
                  input "yarn audit fails. Confirm publish?"
                }
              }
              env.AUDIT_PASS = AUDIT_RES == 0 ;
            }
          }
        }
    }

    post {
        always {
            echo "pipeline post always"
            sh 'bash /mnt/jenkins/script/cleanup.sh'
        }
    }
}
